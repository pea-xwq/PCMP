<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context.xsd
      http://www.springframework.org/schema/aop
      http://www.springframework.org/schema/aop/spring-aop.xsd
      http://www.springframework.org/schema/tx
      http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!--开启注解扫描 只需要处理service和dao-->
    <context:component-scan base-package="com.ssm">
        <!--配置哪些注解不扫描
            Controller用SPringMVC去处理，所以不扫描-->
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    <!--Spring整合MyBatis框架-->
    <!--配置连接池-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="com.mysql.jdbc.Driver"/>
        <property name="jdbcUrl" value="jdbc:mysql://rm-bp1b947i6w0p47wupoo.mysql.rds.aliyuncs.com/pcmp?serverTimezone=UTC"/>
        <property name="user" value="xwq812991655"/>
        <property name="password" value="Xwq993961218"/>
    </bean>
    <!--配置SqlSessionFactory工厂-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--依赖DataSource-->
        <property name="dataSource" ref="dataSource"></property>
        <!--加载mybatis的配置文件-->
        <property name="configLocation" value="classpath:SqlMapConfig.xml"/>
        <!--注入别名配置，包扫描方式-->
        <property name="typeAliasesPackage" value="com.ssm.domain"/>
    </bean>
    <!--官方推荐：动态代理方式的配置-->
    <!--先配置MapperFactoryBean-->
    <!--<bean id="baseMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="sqlSessionFactory" ref="sqlSessionFactory"/>
    </bean>-->
    <bean id="courseDao" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="mapperInterface" value="com.ssm.dao.CourseDao"/>
        <property name="sqlSessionFactory" ref="sqlSessionFactory"/>
    </bean>
    <bean id="userDao" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="mapperInterface" value="com.ssm.dao.UserDao"/>
        <property name="sqlSessionFactory" ref="sqlSessionFactory"/>
    </bean>
    <!--配置一个接口
    <bean id="courseDao" parent="baseMapper">
        <property name="mapperInterface" value="com.ssm.dao.CourseDao"/>
    </bean>

    &lt;!&ndash;配置包扫描器（推荐使用）&ndash;&gt;
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.ssm.dao"/>
    </bean>-->

    <!--配置AccountDao接口所在包
    <bean id="mapperScanner" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.ssm.dao"/>
    </bean>-->

    <!--配置Spring框架声明式事务管理，对Service中的方法进行了事务管理-->
    <!--配置事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!--配置事务通知-->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="find*" read-only="true"/>
            <tx:method name="*" isolation="DEFAULT"/>
        </tx:attributes>
    </tx:advice>
<!--    &lt;!&ndash;配置AOP增强&ndash;&gt;
    <aop:config>
        <aop:advisor advice-ref="txAdvice" pointcut="execution(* com.ssm.service.impl.*serviceImpl.*(..))"/>
    </aop:config>-->
</beans>
